diff --git a/client/ServerRunner.cpp b/client/ServerRunner.cpp
index 8ab4df8..36765de 100644
--- a/client/ServerRunner.cpp
+++ b/client/ServerRunner.cpp
@@ -9,16 +9,17 @@
  */
 #include "StdInc.h"
 
+#ifndef VCMI_MOBILE
+#include <boost/process/v1/child.hpp>
+#include <boost/process/v1/io.hpp>
+#endif
+
 #include "ServerRunner.h"
 
 #include "../lib/VCMIDirs.h"
 #include "../lib/CThreadHelper.h"
 #include "../server/CVCMIServer.h"
 
-#ifndef VCMI_MOBILE
-#include <boost/process/child.hpp>
-#include <boost/process/io.hpp>
-#endif
 
 ServerThreadRunner::ServerThreadRunner() = default;
 ServerThreadRunner::~ServerThreadRunner() = default;
@@ -84,7 +85,7 @@ void ServerProcessRunner::start(uint16_t port, bool connectToLobby, std::shared_
 		args.push_back("--lobby");
 
 	std::error_code ec;
-	child = std::make_unique<boost::process::child>(serverPath, args, ec, boost::process::std_out > logPath);
+	child = std::make_unique<boost::process::v1::child>(serverPath, args, ec, boost::process::v1::std_out > logPath);
 
 	if (ec)
 		throw std::runtime_error("Failed to start server! Reason: " + ec.message());
diff --git a/client/ServerRunner.h b/client/ServerRunner.h
index d045e0c..a89bc87 100644
--- a/client/ServerRunner.h
+++ b/client/ServerRunner.h
@@ -45,7 +45,7 @@ public:
 
 #ifndef VCMI_MOBILE
 
-namespace boost::process {
+namespace boost::process::v1 {
 class child;
 }
 
@@ -53,7 +53,7 @@ class child;
 /// Available only on desktop systems where process management is allowed
 class ServerProcessRunner : public IServerRunner, boost::noncopyable
 {
-	std::unique_ptr<boost::process::child> child;
+	std::unique_ptr<boost::process::v1::child> child;
 
 public:
 	void start(uint16_t port, bool connectToLobby, std::shared_ptr<StartInfo> startingInfo) override;
